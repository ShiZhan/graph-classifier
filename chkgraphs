#!/bin/sh
if [ $# -lt 1 ]; then
  echo "Usage: script <folder>"
  exit 1
fi

script_home=`dirname "${BASH_SOURCE[0]}"`
if [ -d $script_home/../snap/examples ]; then
  snap_examples=`cd $script_home/../snap/examples; pwd`
else
  echo "SNAP required @ [$script_home/../snap]"
  exit 1
fi

#is_win() {
#  local os=`uname`
#  case "$os" in
#    CYGWIN*) return 0 ;;
#    MSYS*)   return 0 ;;
#    *)       return 1 ;;
#  esac
#}

locate_snap_exec() {
  local PRG="$1"
  if [ -x $snap_examples/$PRG/$PRG ]; then
    echo "$snap_examples/$PRG/$PRG"
  elif [ -x $snap_examples/Release/$PRG.exe ]; then
    echo "$snap_examples/Release/$PRG.exe"
  elif [ -x $snap_examples/Debug/$PRG.exe ]; then
    echo "$snap_examples/Debug/$PRG.exe"
  else
    echo ""
  fi
}

net_stat=`locate_snap_exec netstat`
kcore=`locate_snap_exec kcores`

if [ -z $net_stat ] || [ -z $kcore ]; then
  echo "netstat or kcore executables not found."
  exit 1
fi

folder_graphs=$1

if [ -e $folder_graphs ]; then
  if [ -d $folder_graphs ]; then
    printf "% 16s,% 9s,% 9s,% 9s,% 9s,% 9s,% 9s\n" "graphs" "V" "E" "D0" "Di0" "Do0" "Dion0"
  else
    echo "$folder_graphs is not a directory"
    exit 1
  fi
else
  echo "$folder_graphs does not exist"
  exit 1
fi

# snap netstat can only ourput to current directory
# so it'd be better to run in the same directory with dataset

(
  cd $folder_graphs;
  for graph in *.txt; do
    printf "% 16s" "$graph"
    $net_stat -d:F -p:chwCv -i:$graph -o:$graph 2> /dev/null |
      sed -n '20,25p' | sed -e 's/.*:\s*//g' |
      while read v; do printf ",% 9s" "$v"; done
    $kcore -s:F -i:$graph -o:$graph > /dev/null 2> /dev/null
    printf "\n"
  done
)
